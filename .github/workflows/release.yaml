name: Continuous Delivery to Render for Backend and Frontend

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    permissions:
      deployments: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: |
          npm install \
          @google-cloud/local-auth@^3.0.1 \
          bcrypt@^5.1.1 \
          bcryptjs@^2.4.3 \
          cloudinary@^1.41.3 \
          cls-hooked@^4.2.2 \
          cors@^2.8.5 \
          dotenv@^16.4.5 \
          dotnet@^1.1.4 \
          express@^4.21.2 \
          firebase-admin@^13.0.1 \
          googleapis@^144.0.0 \
          ioredis@^5.4.1 \
          jsonwebtoken@^9.0.2 \
          mime-types@^2.1.35 \
          mongodb@^6.10.0 \
          mongoose@^8.9.0 \
          mongoose-delete@^1.0.2 \
          mongoose-slug-generator@^1.0.4 \
          mongoose-slug-updater@^3.3.0 \
          multer@^1.4.5-lts.1 \
          multer-storage-cloudinary@^4.0.0 \
          nodemailer@^6.9.16 \
          path@^0.12.7 \
          process@^0.11.10 \
          redis@^4.7.0 \
          uuid@^11.0.3 \
          eslint@^8.0.0 \
          jest@^29.0.0 \
          supertest@^7.0.0
      

      - name: Deploy Backend to Render
        uses: JorgeLNJunior/render-deploy@v1.4.4
        with:
          service_id: ${{ secrets.RENDER_BACKEND_SERVICE_ID_V2 }}
          api_key: ${{ secrets.RENDER_API_KEY_V2 }}
          clear_cache: true
          wait_deploy: true
          github_deployment: true
          deployment_environment: 'production'
          github_token: ${{ secrets.GITHUB_TOKEN }}

  deploy-frontend:
    runs-on: ubuntu-latest
    permissions:
      deployments: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy Frontend to Render
        uses: JorgeLNJunior/render-deploy@v1.4.4
        with:
          service_id: ${{ secrets.RENDER_FRONTEND_SERVICE_ID }}
          api_key: ${{ secrets.RENDER_API_KEY }}
          clear_cache: true
          wait_deploy: true
          github_deployment: true
          deployment_environment: 'production'
          github_token: ${{ secrets.GITHUB_TOKEN }}